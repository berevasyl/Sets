package org.sourceit;

import org.sourceit.entities.Box;

/**
 * Множеством называется совокупность некоторых элементов,
 * объединенных каким-либо общим признаком.
 * Элементами множества могут быть числа, фигуры, предметы, понятия и т.п.
 */
public interface Sets {

    /**
     * Два множества А и В равны (А=В),
     * если они состоят из одних и тех же элементов.
     * Например, если А={1,2,3,4}, B={3,1,4,2} то А=В.
     *
     * @param sets which to compare.
     * @return equality
     */
    boolean equal(Sets sets);

    /**
     * Объединением (суммой) множеств А и В называется множество А ∪ В,
     * элементы которого принадлежат хотя бы одному из этих множеств.
     * Например, если А={1,2,4}, B={3,4,5,6}, то А ∪ B = {1,2,3,4,5,6}
     *
     * @param sets
     * @return the sum of sets
     */
    Sets sum(Sets sets);

    /**
     * Пересечением (произведением) множеств А и В
     * называется множество А ∩ В,
     * элементы которого принадлежат как множеству А, так и множеству В.
     * Например, если А={1,2,4}, B={3,4,5,2}, то А ∩ В = {2,4}
     *
     * @param sets
     * @return the product of two sets.
     */
    Sets product(Sets sets);

    /**
     * Разностью множеств А и В называется множество АВ,
     * элементы которого принадлежат множесву А,
     * но не принадлежат множеству В.
     * Например, если А={1,2,3,4}, B={3,4,5}, то АВ = {1,2}
     *
     * @param sets
     * @return the difference of two sets.
     */
    Sets difference(Sets sets);

    /**
     * Симметричной разностью множеств А и В называется множество А Δ В,
     * являющееся объединением разностей множеств АВ и ВА,
     * то есть А Δ В = (АВ) ∪ (ВА).
     * Например, если А={1,2,3,4}, B={3,4,5,6},
     * то А Δ В = {1,2} ∪ {5,6} = {1,2,5,6}
     *
     * @param sets
     * @return
     */
    Sets symmetricDifference(Sets sets);

    /**
     *
     * @param box
     */
    void add(Box box);

    /**
     *
     * @return
     */
    Box getBox();

    /**
     *
     * @return
     */
    int size();

    /**
     *
     */
    void reset();

    void sort();

}
